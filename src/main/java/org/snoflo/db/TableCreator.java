package org.snoflo.db;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.h2.jdbc.JdbcSQLSyntaxErrorException;

import com.zaxxer.hikari.HikariDataSource;

public class TableCreator {

    private HikariDataSource dataSource = new HikariDataSource();

    public TableCreator(HikariDataSource dataSource) {
        this.dataSource = dataSource;
    }

    public void createTable(String tableName) {

        StringBuilder tableSql = new StringBuilder();
        // tableSql.append(" CREATE TABLE IF NOT EXISTS ")
        tableSql.append(" CREATE TABLE ")
                .append(tableName)
                .append("(")
                .append(" id INTEGER GENERATED BY DEFAULT AS IDENTITY, ")
                .append(" concept VARCHAR(255) NOT NULL UNIQUE,")
                .append("description VARCHAR(255) NOT NULL UNIQUE,")
                .append("keyword1 VARCHAR(255),")
                .append("keyword2 VARCHAR(255),")
                .append(" PRIMARY KEY (id)")
                .append(")");

        try (Connection conn = dataSource.getConnection()) {

            PreparedStatement stmt = conn.prepareStatement(tableSql.toString());
            stmt.execute();
            System.out.println("createtable실행?");

        } catch (JdbcSQLSyntaxErrorException e) {
            dropTable(tableName);
            createTable(tableName);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void dropTable(String tableName) {
        StringBuilder sql = new StringBuilder();
        sql.append("DROP TABLE ")
                .append(tableName);

        try (Connection conn = dataSource.getConnection()) {

            PreparedStatement stmt = conn.prepareStatement(sql.toString());
            stmt.execute();

            System.out.println("droptable실행?");

        } catch (JdbcSQLSyntaxErrorException e) {

        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    public List<String> getTable() {
        
        List<String> list = new ArrayList<>();
        try (Connection conn = dataSource.getConnection()) {
            DatabaseMetaData meta = conn.getMetaData();
            ResultSet tables = meta.getTables(null, "PUBLIC", "%", new String[] { "TABLE" });
            // ResultSet tables = meta.getTables(null, null, "%", new String[] { "TABLE" });


            while (tables.next()) {
                String tableName = tables.getString("TABLE_NAME");
                // System.out.println("Table Name: " + tableName);
                list.add(tableName);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }
}
