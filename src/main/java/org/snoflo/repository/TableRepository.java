package org.snoflo.repository;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.zaxxer.hikari.HikariDataSource;

public class TableRepository {

    private HikariDataSource dataSource;

    public TableRepository(HikariDataSource dataSource) {
        this.dataSource = dataSource;
    }

    public List<String> findAllTable() {
        List<String> list = new ArrayList<>();

        try (Connection conn = dataSource.getConnection()) {
            DatabaseMetaData meta = conn.getMetaData();
            ResultSet tables = meta.getTables(null, "PUBLIC", "%", new String[] { "TABLE" });

            while (tables.next()) {
                String tableName = tables.getString("TABLE_NAME");
                list.add(tableName);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }

    public void createTable(String fileName) throws SQLException {

        StringBuilder tableSql = new StringBuilder();
        tableSql.append(" CREATE TABLE ")
                .append(fileName)
                .append("(")
                .append(" id INTEGER GENERATED BY public AS IDENTITY, ")
                .append(" concept VARCHAR(255) NOT NULL UNIQUE,")
                .append("description VARCHAR(255) NOT NULL UNIQUE,")
                .append("keyword1 VARCHAR(255),")
                .append("keyword2 VARCHAR(255),")
                .append(" PRIMARY KEY (id)")
                .append(")");

        try (Connection conn = dataSource.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(tableSql.toString());
            stmt.execute();
        }
    }

    public void truncateTable(String fileName) {

        StringBuilder sql = new StringBuilder();
        sql.append("TRUNCATE TABLE ")
                .append(fileName);

        try (Connection conn = dataSource.getConnection()) {

            PreparedStatement stmt = conn.prepareStatement(sql.toString());
            stmt.execute();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

}
